name: Deploy QA

on:
  push:
    branches: [ without_filament_institution ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Setup PHP for Composer and Ziggy
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Generate Ziggy Routes
        run: php artisan ziggy:generate

      # Setup Node.js and build assets
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        run: |
          NODE_OPTIONS="--max-old-space-size=2024" npm run build
          chmod -R 755 public/build

      # Prepare server directory permissions
      - name: Prepare Server Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 30m
          script: |
            sudo chown -R ${{ secrets.EC2_USERNAME }}:${{ secrets.EC2_USERNAME }} ${{ secrets.REMOTE_DIR }}
            sudo chmod -R 755 ${{ secrets.REMOTE_DIR }}

      # Copy files to EC2 using SCP
      - name: Copy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ".,!node_modules,!tests,!.git,!storage,!bootstrap"
          target: ${{ secrets.REMOTE_DIR }}
          strip_components: 1
          overwrite: true

      # Deploy to server via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 30m
          script: |
            cd ${{ secrets.REMOTE_DIR }}
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize:clear
            sudo chown -R www-data:www-data .
            sudo chmod -R 755 .
            sudo chmod -R 755 storage bootstrap/cache
            sudo chmod -R 664 storage/logs
            sudo systemctl restart apache2